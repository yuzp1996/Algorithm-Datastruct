{"Time":"2019-09-30T11:56:57.105356+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch"}
{"Time":"2019-09-30T11:56:57.105726+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"=== RUN   TestBinarySearch\n"}
{"Time":"2019-09-30T11:56:57.106102+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"Running Suite: BinarySearch Suite\n"}
{"Time":"2019-09-30T11:56:57.106169+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"=================================\n"}
{"Time":"2019-09-30T11:56:57.106193+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"Random Seed: \u001b[1m1569815817\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.106334+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"Will run \u001b[1m6\u001b[0m of \u001b[1m6\u001b[0m specs\n"}
{"Time":"2019-09-30T11:56:57.10643+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"\n"}
{"Time":"2019-09-30T11:56:57.106477+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.106501+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"\u001b[1m\u001b[32mRan 6 of 6 Specs in 0.001 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.106532+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m6 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.10659+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Output":"--- PASS: TestBinarySearch (0.00s)\n"}
{"Time":"2019-09-30T11:56:57.106618+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/BinarySearch","Test":"TestBinarySearch","Elapsed":0}
{"Time":"2019-09-30T11:56:57.10665+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Output":"PASS\n"}
{"Time":"2019-09-30T11:56:57.108183+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Output":"coverage: 96.2% of statements\n"}
{"Time":"2019-09-30T11:56:57.110263+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/BinarySearch","Output":"ok  \tAlgorithm-Datastruct/golang/BinarySearch\t0.046s\tcoverage: 96.2% of statements\n"}
{"Time":"2019-09-30T11:56:57.110332+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/BinarySearch","Elapsed":0.046}
{"Time":"2019-09-30T11:56:57.302807+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph"}
{"Time":"2019-09-30T11:56:57.302889+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Output":"=== RUN   TestListGraph\n"}
{"Time":"2019-09-30T11:56:57.3047+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Output":"0 -\u003e 5 -\u003e 3 -\u003e nil\n"}
{"Time":"2019-09-30T11:56:57.304785+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Output":"1 -\u003e 2 -\u003e 4 -\u003e 3 -\u003e nil\n"}
{"Time":"2019-09-30T11:56:57.304822+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Output":"2 -\u003e 1 -\u003e 5 -\u003e nil\n"}
{"Time":"2019-09-30T11:56:57.304838+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Output":"3 -\u003e 4 -\u003e 1 -\u003e 0 -\u003e nil\n"}
{"Time":"2019-09-30T11:56:57.304881+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Output":"4 -\u003e 3 -\u003e 1 -\u003e nil\n"}
{"Time":"2019-09-30T11:56:57.304898+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Output":"5 -\u003e 6 -\u003e 2 -\u003e 0 -\u003e nil\n"}
{"Time":"2019-09-30T11:56:57.304913+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Output":"6 -\u003e 5 -\u003e nil\n"}
{"Time":"2019-09-30T11:56:57.305476+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Output":"--- PASS: TestListGraph (0.00s)\n"}
{"Time":"2019-09-30T11:56:57.305518+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Test":"TestListGraph","Elapsed":0}
{"Time":"2019-09-30T11:56:57.30554+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Output":"PASS\n"}
{"Time":"2019-09-30T11:56:57.306605+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Output":"coverage: 97.4% of statements\n"}
{"Time":"2019-09-30T11:56:57.308416+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Output":"ok  \tAlgorithm-Datastruct/golang/Graph/ListGraph\t0.037s\tcoverage: 97.4% of statements\n"}
{"Time":"2019-09-30T11:56:57.308466+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Graph/ListGraph","Elapsed":0.037}
{"Time":"2019-09-30T11:56:57.322921+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue"}
{"Time":"2019-09-30T11:56:57.323002+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"=== RUN   TestArrayqueue\n"}
{"Time":"2019-09-30T11:56:57.323561+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"Running Suite: Arrayqueue Suite\n"}
{"Time":"2019-09-30T11:56:57.323602+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"===============================\n"}
{"Time":"2019-09-30T11:56:57.323622+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"Random Seed: \u001b[1m1569815817\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.323685+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"Will run \u001b[1m4\u001b[0m of \u001b[1m4\u001b[0m specs\n"}
{"Time":"2019-09-30T11:56:57.323719+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"\n"}
{"Time":"2019-09-30T11:56:57.32499+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"Can Not Dequeue Now\n"}
{"Time":"2019-09-30T11:56:57.325223+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0mCan Not Enqueue Now\n"}
{"Time":"2019-09-30T11:56:57.325357+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.325416+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"\u001b[1m\u001b[32mRan 4 of 4 Specs in 0.002 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.325475+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m4 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.325567+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Output":"--- PASS: TestArrayqueue (0.00s)\n"}
{"Time":"2019-09-30T11:56:57.325716+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Test":"TestArrayqueue","Elapsed":0}
{"Time":"2019-09-30T11:56:57.325763+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Output":"PASS\n"}
{"Time":"2019-09-30T11:56:57.326488+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Output":"coverage: 65.7% of statements\n"}
{"Time":"2019-09-30T11:56:57.329004+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Output":"ok  \tAlgorithm-Datastruct/golang/Queue/arrayqueue\t0.035s\tcoverage: 65.7% of statements\n"}
{"Time":"2019-09-30T11:56:57.332038+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Queue/arrayqueue","Elapsed":0.039}
{"Time":"2019-09-30T11:56:57.344952+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph"}
{"Time":"2019-09-30T11:56:57.345082+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"=== RUN   TestGraph\n"}
{"Time":"2019-09-30T11:56:57.345167+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"Running Suite: Graph Suite\n"}
{"Time":"2019-09-30T11:56:57.345229+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"==========================\n"}
{"Time":"2019-09-30T11:56:57.345259+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"Random Seed: \u001b[1m1569815817\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.345358+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"Will run \u001b[1m1\u001b[0m of \u001b[1m1\u001b[0m specs\n"}
{"Time":"2019-09-30T11:56:57.345406+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"\n"}
{"Time":"2019-09-30T11:56:57.346566+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"[[0 0 0 0] [0 0 0 0] [0 0 0 0] [0 0 0 0]]\n"}
{"Time":"2019-09-30T11:56:57.346649+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"1 2\n"}
{"Time":"2019-09-30T11:56:57.346788+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"0\n"}
{"Time":"2019-09-30T11:56:57.346818+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"[[0 0 0 0] [0 0 5 0] [0 0 0 0] [0 0 0 0]]\n"}
{"Time":"2019-09-30T11:56:57.346853+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"[[0 0 0 0] [0 0 5 0] [0 0 0 0] [0 0 0 0]]\n"}
{"Time":"2019-09-30T11:56:57.346883+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"3 2\n"}
{"Time":"2019-09-30T11:56:57.346903+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"0\n"}
{"Time":"2019-09-30T11:56:57.346935+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"[[0 0 0 0] [0 0 5 0] [0 0 0 0] [0 0 4 0]]\n"}
{"Time":"2019-09-30T11:56:57.346957+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.346994+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"\u001b[1m\u001b[32mRan 1 of 1 Specs in 0.002 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.347022+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m1 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:56:57.34713+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Output":"--- PASS: TestGraph (0.00s)\n"}
{"Time":"2019-09-30T11:56:57.347158+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Test":"TestGraph","Elapsed":0}
{"Time":"2019-09-30T11:56:57.347177+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Output":"PASS\n"}
{"Time":"2019-09-30T11:56:57.347396+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Output":"coverage: 92.9% of statements\n"}
{"Time":"2019-09-30T11:56:57.34992+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Output":"ok  \tAlgorithm-Datastruct/golang/Graph/matrixGraph\t0.036s\tcoverage: 92.9% of statements\n"}
{"Time":"2019-09-30T11:56:57.349997+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Graph/matrixGraph","Elapsed":0.036}
{"Time":"2019-09-30T11:56:59.473513+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue"}
{"Time":"2019-09-30T11:56:59.473646+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"=== RUN   TestCyclequeue\n"}
{"Time":"2019-09-30T11:56:59.474113+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"Running Suite: Cyclequeue Suite\n"}
{"Time":"2019-09-30T11:56:59.474161+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"===============================\n"}
{"Time":"2019-09-30T11:56:59.474193+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"Random Seed: \u001b[1m1569815819\u001b[0m\n"}
{"Time":"2019-09-30T11:56:59.474239+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"Will run \u001b[1m3\u001b[0m of \u001b[1m3\u001b[0m specs\n"}
{"Time":"2019-09-30T11:56:59.474258+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"\n"}
{"Time":"2019-09-30T11:56:59.476821+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:56:59.476916+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"\u001b[1m\u001b[32mRan 3 of 3 Specs in 0.003 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:56:59.476943+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m3 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:56:59.476977+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Output":"--- PASS: TestCyclequeue (0.00s)\n"}
{"Time":"2019-09-30T11:56:59.477+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Test":"TestCyclequeue","Elapsed":0}
{"Time":"2019-09-30T11:56:59.477032+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Output":"PASS\n"}
{"Time":"2019-09-30T11:56:59.47739+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Output":"coverage: 72.7% of statements\n"}
{"Time":"2019-09-30T11:56:59.479317+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Output":"ok  \tAlgorithm-Datastruct/golang/Queue/cyclequeue\t0.036s\tcoverage: 72.7% of statements\n"}
{"Time":"2019-09-30T11:56:59.479392+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Queue/cyclequeue","Elapsed":0.036}
{"Time":"2019-09-30T11:57:00.024868+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack"}
{"Time":"2019-09-30T11:57:00.025028+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"=== RUN   TestLinklistStack\n"}
{"Time":"2019-09-30T11:57:00.025353+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"Running Suite: LinklistStack Suite\n"}
{"Time":"2019-09-30T11:57:00.025491+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"==================================\n"}
{"Time":"2019-09-30T11:57:00.02553+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"Random Seed: \u001b[1m1569815820\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.025551+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"Will run \u001b[1m0\u001b[0m of \u001b[1m0\u001b[0m specs\n"}
{"Time":"2019-09-30T11:57:00.025579+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"\n"}
{"Time":"2019-09-30T11:57:00.026571+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"\n"}
{"Time":"2019-09-30T11:57:00.026758+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"\u001b[1m\u001b[32mRan 0 of 0 Specs in 0.001 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.026824+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m0 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.026876+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Output":"--- PASS: TestLinklistStack (0.00s)\n"}
{"Time":"2019-09-30T11:57:00.026912+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Test":"TestLinklistStack","Elapsed":0}
{"Time":"2019-09-30T11:57:00.026932+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Output":"PASS\n"}
{"Time":"2019-09-30T11:57:00.027599+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Output":"coverage: 0.0% of statements\n"}
{"Time":"2019-09-30T11:57:00.029756+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Output":"ok  \tAlgorithm-Datastruct/golang/Stack/linklistStack\t0.051s\tcoverage: 0.0% of statements\n"}
{"Time":"2019-09-30T11:57:00.029822+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Stack/linklistStack","Elapsed":0.052}
{"Time":"2019-09-30T11:57:00.3266+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort"}
{"Time":"2019-09-30T11:57:00.326674+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"=== RUN   TestSort\n"}
{"Time":"2019-09-30T11:57:00.327136+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"Running Suite: Sort Suite\n"}
{"Time":"2019-09-30T11:57:00.327185+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"=========================\n"}
{"Time":"2019-09-30T11:57:00.327205+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"Random Seed: \u001b[1m1569815820\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.327231+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"Will run \u001b[1m6\u001b[0m of \u001b[1m6\u001b[0m specs\n"}
{"Time":"2019-09-30T11:57:00.327339+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"\n"}
{"Time":"2019-09-30T11:57:00.328785+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.328885+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"\u001b[1m\u001b[32mRan 6 of 6 Specs in 0.002 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.328937+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m6 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.328974+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Output":"--- PASS: TestSort (0.00s)\n"}
{"Time":"2019-09-30T11:57:00.328994+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Sort","Test":"TestSort","Elapsed":0}
{"Time":"2019-09-30T11:57:00.329025+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Output":"PASS\n"}
{"Time":"2019-09-30T11:57:00.330819+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Output":"coverage: 88.5% of statements\n"}
{"Time":"2019-09-30T11:57:00.332746+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Sort","Output":"ok  \tAlgorithm-Datastruct/golang/Sort\t0.036s\tcoverage: 88.5% of statements\n"}
{"Time":"2019-09-30T11:57:00.332788+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Sort","Elapsed":0.037}
{"Time":"2019-09-30T11:57:00.814606+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion"}
{"Time":"2019-09-30T11:57:00.814685+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"=== RUN   TestRecursion\n"}
{"Time":"2019-09-30T11:57:00.815123+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"Running Suite: Recursion Suite\n"}
{"Time":"2019-09-30T11:57:00.815174+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"==============================\n"}
{"Time":"2019-09-30T11:57:00.815206+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"Random Seed: \u001b[1m1569815820\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.815246+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"Will run \u001b[1m3\u001b[0m of \u001b[1m3\u001b[0m specs\n"}
{"Time":"2019-09-30T11:57:00.815273+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"\n"}
{"Time":"2019-09-30T11:57:00.821484+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.82162+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"\u001b[1m\u001b[32mRan 3 of 3 Specs in 0.006 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.821669+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m3 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:57:00.821715+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Output":"--- PASS: TestRecursion (0.01s)\n"}
{"Time":"2019-09-30T11:57:00.821768+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Recursion","Test":"TestRecursion","Elapsed":0.01}
{"Time":"2019-09-30T11:57:00.821796+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Output":"PASS\n"}
{"Time":"2019-09-30T11:57:00.822567+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Output":"coverage: 91.2% of statements\n"}
{"Time":"2019-09-30T11:57:00.824401+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Recursion","Output":"ok  \tAlgorithm-Datastruct/golang/Recursion\t0.044s\tcoverage: 91.2% of statements\n"}
{"Time":"2019-09-30T11:57:00.824441+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Recursion","Elapsed":0.045}
{"Time":"2019-09-30T11:57:00.827116+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack","Output":"?   \tAlgorithm-Datastruct/golang/Stack\t[no test files]\n"}
{"Time":"2019-09-30T11:57:00.827188+08:00","Action":"skip","Package":"Algorithm-Datastruct/golang/Stack","Elapsed":0}
{"Time":"2019-09-30T11:57:00.827222+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Stack/stackarray","Output":"?   \tAlgorithm-Datastruct/golang/Stack/stackarray\t[no test files]\n"}
{"Time":"2019-09-30T11:57:00.827236+08:00","Action":"skip","Package":"Algorithm-Datastruct/golang/Stack/stackarray","Elapsed":0}
{"Time":"2019-09-30T11:57:01.608823+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/array","Output":"testing: warning: no tests to run\n"}
{"Time":"2019-09-30T11:57:01.608943+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/array","Output":"PASS\n"}
{"Time":"2019-09-30T11:57:01.610473+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/array","Output":"coverage: 0.0% of statements\n"}
{"Time":"2019-09-30T11:57:01.611265+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/array","Output":"ok  \tAlgorithm-Datastruct/golang/array\t0.018s\tcoverage: 0.0% of statements [no tests to run]\n"}
{"Time":"2019-09-30T11:57:01.611337+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/array","Elapsed":0.019}
{"Time":"2019-09-30T11:57:04.187644+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree"}
{"Time":"2019-09-30T11:57:04.187812+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"=== RUN   TestTree\n"}
{"Time":"2019-09-30T11:57:04.191715+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"Running Suite: Tree Suite\n"}
{"Time":"2019-09-30T11:57:04.191801+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"=========================\n"}
{"Time":"2019-09-30T11:57:04.19183+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"Random Seed: \u001b[1m1569815824\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.191864+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"Will run \u001b[1m11\u001b[0m of \u001b[1m11\u001b[0m specs\n"}
{"Time":"2019-09-30T11:57:04.191906+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"\n"}
{"Time":"2019-09-30T11:57:04.195074+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0mTree is [29 19 45 18 20 40 50 1] \n"}
{"Time":"2019-09-30T11:57:04.195162+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"no such leaf\u001b[32m•\u001b[0mNew the tree is [100 50 150 25 75 125 200]\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.195199+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"\u001b[1m\u001b[32mRan 11 of 11 Specs in 0.002 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.195237+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m11 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.195272+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Output":"--- PASS: TestTree (0.01s)\n"}
{"Time":"2019-09-30T11:57:04.195289+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Tree","Test":"TestTree","Elapsed":0.01}
{"Time":"2019-09-30T11:57:04.195324+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Output":"PASS\n"}
{"Time":"2019-09-30T11:57:04.19534+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Output":"coverage: 87.7% of statements\n"}
{"Time":"2019-09-30T11:57:04.198072+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/Tree","Output":"ok  \tAlgorithm-Datastruct/golang/Tree\t0.049s\tcoverage: 87.7% of statements\n"}
{"Time":"2019-09-30T11:57:04.198167+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/Tree","Elapsed":0.051}
{"Time":"2019-09-30T11:57:04.310169+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF"}
{"Time":"2019-09-30T11:57:04.310265+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"=== RUN   TestBF\n"}
{"Time":"2019-09-30T11:57:04.310866+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"Running Suite: BF Suite\n"}
{"Time":"2019-09-30T11:57:04.310945+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"=======================\n"}
{"Time":"2019-09-30T11:57:04.310964+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"Random Seed: \u001b[1m1569815824\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.310986+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"Will run \u001b[1m5\u001b[0m of \u001b[1m5\u001b[0m specs\n"}
{"Time":"2019-09-30T11:57:04.311033+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.311523+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[91m\u001b[1m• Failure [0.001 seconds]\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.311564+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"BF\n"}
{"Time":"2019-09-30T11:57:04.311586+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[90m/Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:9\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.311615+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"  find if there is the pattern\n"}
{"Time":"2019-09-30T11:57:04.311644+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"  \u001b[90m/Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:11\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.311662+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    \u001b[91m\u001b[1mfind the main [It]\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.311683+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    \u001b[90m/Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:22\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.311699+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.311714+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    \u001b[91mExpected\n"}
{"Time":"2019-09-30T11:57:04.311758+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"        \u003cbool\u003e: false\n"}
{"Time":"2019-09-30T11:57:04.311776+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    to equal\n"}
{"Time":"2019-09-30T11:57:04.311791+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"        \u003cbool\u003e: true\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.311806+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.311835+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    /Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:24\n"}
{"Time":"2019-09-30T11:57:04.311856+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[90m------------------------------\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312158+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312222+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[90m------------------------------\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312294+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[91m\u001b[1m• Failure [0.000 seconds]\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312323+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"BF\n"}
{"Time":"2019-09-30T11:57:04.312341+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[90m/Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:9\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312371+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"  find if there is the pattern\n"}
{"Time":"2019-09-30T11:57:04.312389+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"  \u001b[90m/Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:11\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312406+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    \u001b[91m\u001b[1mRk can find the string [It]\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312428+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    \u001b[90m/Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:38\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312459+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.312476+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    \u001b[91mExpected\n"}
{"Time":"2019-09-30T11:57:04.312492+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"        \u003cbool\u003e: false\n"}
{"Time":"2019-09-30T11:57:04.312509+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    to equal\n"}
{"Time":"2019-09-30T11:57:04.312538+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"        \u003cbool\u003e: true\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312556+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.312573+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"    /Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:40\n"}
{"Time":"2019-09-30T11:57:04.312616+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[90m------------------------------\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312663+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.312682+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.312703+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[91m\u001b[1mSummarizing 2 Failures:\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312727+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.312747+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[91m\u001b[1m[Fail] \u001b[0m\u001b[90mBF \u001b[0m\u001b[0mfind if there is the pattern \u001b[0m\u001b[91m\u001b[1m[It] find the main \u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312765+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[37m/Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:24\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312784+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.312802+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[91m\u001b[1m[Fail] \u001b[0m\u001b[90mBF \u001b[0m\u001b[0mfind if there is the pattern \u001b[0m\u001b[91m\u001b[1m[It] Rk can find the string \u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312824+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[37m/Users/yuzhipeng/go/src/Algorithm-Datastruct/golang/String/BF/BF_test.go:40\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.31284+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\n"}
{"Time":"2019-09-30T11:57:04.312857+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[1m\u001b[91mRan 5 of 5 Specs in 0.001 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312873+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"\u001b[1m\u001b[91mFAIL!\u001b[0m -- \u001b[32m\u001b[1m3 Passed\u001b[0m | \u001b[91m\u001b[1m2 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.312932+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Output":"--- FAIL: TestBF (0.00s)\n"}
{"Time":"2019-09-30T11:57:04.312951+08:00","Action":"fail","Package":"Algorithm-Datastruct/golang/String/BF","Test":"TestBF","Elapsed":0}
{"Time":"2019-09-30T11:57:04.31297+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Output":"FAIL\n"}
{"Time":"2019-09-30T11:57:04.312995+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Output":"coverage: 93.3% of statements\n"}
{"Time":"2019-09-30T11:57:04.314816+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BF","Output":"FAIL\tAlgorithm-Datastruct/golang/String/BF\t0.034s\n"}
{"Time":"2019-09-30T11:57:04.31489+08:00","Action":"fail","Package":"Algorithm-Datastruct/golang/String/BF","Elapsed":0.034}
{"Time":"2019-09-30T11:57:04.31763+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/String/BM","Output":"?   \tAlgorithm-Datastruct/golang/String/BM\t[no test files]\n"}
{"Time":"2019-09-30T11:57:04.317685+08:00","Action":"skip","Package":"Algorithm-Datastruct/golang/String/BM","Elapsed":0}
{"Time":"2019-09-30T11:57:04.710024+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap"}
{"Time":"2019-09-30T11:57:04.710131+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"=== RUN   TestHeap\n"}
{"Time":"2019-09-30T11:57:04.710672+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"Running Suite: Heap Suite\n"}
{"Time":"2019-09-30T11:57:04.710804+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"=========================\n"}
{"Time":"2019-09-30T11:57:04.710886+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"Random Seed: \u001b[1m1569815824\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.710926+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"Will run \u001b[1m7\u001b[0m of \u001b[1m7\u001b[0m specs\n"}
{"Time":"2019-09-30T11:57:04.710966+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"\n"}
{"Time":"2019-09-30T11:57:04.712475+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m[0 14 15 18 20 0][0 20 0 0 0 0]\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.712539+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"\u001b[1m\u001b[32mRan 7 of 7 Specs in 0.002 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.712564+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m7 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:57:04.71262+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Output":"--- PASS: TestHeap (0.00s)\n"}
{"Time":"2019-09-30T11:57:04.712667+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/heap","Test":"TestHeap","Elapsed":0}
{"Time":"2019-09-30T11:57:04.712695+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Output":"PASS\n"}
{"Time":"2019-09-30T11:57:04.716017+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Output":"coverage: 95.7% of statements\n"}
{"Time":"2019-09-30T11:57:04.718225+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/heap","Output":"ok  \tAlgorithm-Datastruct/golang/heap\t0.043s\tcoverage: 95.7% of statements\n"}
{"Time":"2019-09-30T11:57:04.718274+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/heap","Elapsed":0.044}
{"Time":"2019-09-30T11:57:05.06988+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist"}
{"Time":"2019-09-30T11:57:05.069964+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"=== RUN   TestLinklist\n"}
{"Time":"2019-09-30T11:57:05.070578+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"Running Suite: Linklist Suite\n"}
{"Time":"2019-09-30T11:57:05.070641+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"=============================\n"}
{"Time":"2019-09-30T11:57:05.070684+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"Random Seed: \u001b[1m1569815825\u001b[0m\n"}
{"Time":"2019-09-30T11:57:05.070738+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"Will run \u001b[1m3\u001b[0m of \u001b[1m3\u001b[0m specs\n"}
{"Time":"2019-09-30T11:57:05.070764+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"\n"}
{"Time":"2019-09-30T11:57:05.070811+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"\u001b[32m•\u001b[0m1 -\u003e 2 -\u003e 3 -\u003e 4 -\u003e 5 -\u003e \n"}
{"Time":"2019-09-30T11:57:05.070835+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"5 -\u003e 4 -\u003e 3 -\u003e 2 -\u003e 1 -\u003e 0 -\u003e \n"}
{"Time":"2019-09-30T11:57:05.070896+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"\u001b[32m•\u001b[0m\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:57:05.070916+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"\u001b[1m\u001b[32mRan 3 of 3 Specs in 0.000 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:57:05.070935+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m3 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:57:05.07099+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Output":"--- PASS: TestLinklist (0.00s)\n"}
{"Time":"2019-09-30T11:57:05.071011+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/linklist","Test":"TestLinklist","Elapsed":0}
{"Time":"2019-09-30T11:57:05.071033+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Output":"PASS\n"}
{"Time":"2019-09-30T11:57:05.072685+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Output":"coverage: 26.6% of statements\n"}
{"Time":"2019-09-30T11:57:05.074505+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/linklist","Output":"ok  \tAlgorithm-Datastruct/golang/linklist\t0.038s\tcoverage: 26.6% of statements\n"}
{"Time":"2019-09-30T11:57:05.074564+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/linklist","Elapsed":0.038}
{"Time":"2019-09-30T11:57:05.913625+08:00","Action":"run","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist"}
{"Time":"2019-09-30T11:57:05.91377+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"=== RUN   TestSkiplist\n"}
{"Time":"2019-09-30T11:57:05.914518+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"Running Suite: Skiplist Suite\n"}
{"Time":"2019-09-30T11:57:05.914587+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"=============================\n"}
{"Time":"2019-09-30T11:57:05.914619+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"Random Seed: \u001b[1m1569815825\u001b[0m\n"}
{"Time":"2019-09-30T11:57:05.914655+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"Will run \u001b[1m1\u001b[0m of \u001b[1m1\u001b[0m specs\n"}
{"Time":"2019-09-30T11:57:05.914697+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"\n"}
{"Time":"2019-09-30T11:57:05.917265+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"\u001b[32m•\u001b[0m\n"}
{"Time":"2019-09-30T11:57:05.917327+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"\u001b[1m\u001b[32mRan 1 of 1 Specs in 0.002 seconds\u001b[0m\n"}
{"Time":"2019-09-30T11:57:05.917359+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"\u001b[1m\u001b[32mSUCCESS!\u001b[0m -- \u001b[32m\u001b[1m1 Passed\u001b[0m | \u001b[91m\u001b[1m0 Failed\u001b[0m | \u001b[33m\u001b[1m0 Pending\u001b[0m | \u001b[36m\u001b[1m0 Skipped\u001b[0m\n"}
{"Time":"2019-09-30T11:57:05.917447+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Output":"--- PASS: TestSkiplist (0.00s)\n"}
{"Time":"2019-09-30T11:57:05.917477+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/skiplist","Test":"TestSkiplist","Elapsed":0}
{"Time":"2019-09-30T11:57:05.917497+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Output":"PASS\n"}
{"Time":"2019-09-30T11:57:05.917547+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Output":"coverage: 71.4% of statements\n"}
{"Time":"2019-09-30T11:57:05.919157+08:00","Action":"output","Package":"Algorithm-Datastruct/golang/skiplist","Output":"ok  \tAlgorithm-Datastruct/golang/skiplist\t0.037s\tcoverage: 71.4% of statements\n"}
{"Time":"2019-09-30T11:57:05.919205+08:00","Action":"pass","Package":"Algorithm-Datastruct/golang/skiplist","Elapsed":0.037}
